{"version":3,"sources":["scripts/main.js"],"names":["startBtn","document","querySelector","score","startMsg","winMsg","loseMsg","fieldRows","querySelectorAll","rows","row","push","children","columns","Array","from","length","i","cells","flat","addNumber","allCells","emptyCells","filter","cell","textContent","chance","Math","random","index","floor","styleCells","className","classList","add","move","arr","direction","cellsBefore","map","el","checkArraysEqual","showWinMsg","showLoseMsg","rightOrDown","cellsWithNumb","mergeCells","pop","leftOrUp","shift","newValue","splice","arr1","arr2","every","elem","some","remove","isMergePossible","addEventListener","restartBtn","style","outline","forEach","body","e","code"],"mappings":";AAAA,aAsMC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApMD,IAoMC,EApMKA,EAAWC,SAASC,cAAc,UAClCC,EAAQF,SAASC,cAAc,eAC/BE,EAAWH,SAASC,cAAc,kBAClCG,EAASJ,SAASC,cAAc,gBAChCI,EAAUL,SAASC,cAAc,iBAEjCK,EAAgBN,EAAAA,SAASO,iBAAiB,eAC1CC,EAAO,GAEKF,EAAAA,EAAAA,GA2LjB,IA3L4B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBG,IAAAA,EAAkB,EAAA,MAC3BD,EAAKE,KAASD,EAAAA,EAAIE,YA0LnB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IArLD,IAFA,IAAMC,EAAUC,MAAMC,KAAK,CAAEC,OAAQP,EAAKO,QAAU,WAAO,MAAA,KAEzCP,EAAAA,EAAAA,EAAAA,EAAM,EAAA,EAAA,OAAA,IACjB,IADIC,IAAAA,EAAN,EAAA,GACMO,EAAI,EAAGA,EAAIP,EAAIM,OAAQC,IAC9BJ,EAAQI,GAAGN,KAAKD,EAAIO,IAIxB,IAAMC,EAAQT,EAAKU,OAiDnB,SAASC,EAAUC,GACXC,IAAAA,EAAaD,EAASE,OAAO,SAAAC,GAAQ,OAACA,EAAKC,cAE7C,GAACH,EAAWN,OAAZ,CAIEU,IAAAA,EAASC,KAAKC,SACdC,EAAQF,KAAKG,MAAMH,KAAKC,SAAWN,EAAWN,QAGlDM,EAAWO,GAAOJ,YADhBC,EAAS,GACqB,IAEA,KAIpC,SAASK,EAAWV,GACCA,IADS,EACTA,EAAAA,EAAAA,GADS,IACC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBG,IAAAA,EAAkB,EAAA,MAC3BA,EAAKQ,UAAY,GACjBR,EAAKS,UAAUC,IAAI,cAEfV,EAAKC,aACPD,EAAKS,UAAUC,IAAmBV,eAAAA,OAAAA,EAAKC,eANf,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAW9B,SAASU,EAAKC,EAAKC,GACXC,IAAAA,EAAcpB,EAAMqB,IAAI,SAAAC,GAAMA,OAAAA,EAAGf,cAEvCY,EAAUD,GAILK,EAAiBH,EAFHpB,EAAMqB,IAAI,SAAAC,GAAMA,OAAAA,EAAGf,gBAGpCL,EAAUF,GAGZwB,EAAWxB,GACXyB,EAAYzB,GACZa,EAAWb,GAGb,SAAS0B,EAAYR,GACDA,IADM,EACNA,EAAAA,EAAAA,GADM,IACD,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAZ1B,IAAAA,EAAY,EAAA,MACfmC,EAAgBnC,EAAIa,OAAO,SAAAC,GAAQA,OAAAA,EAAKC,cAE9CqB,EAAWD,GAEN,IAAA,IAAI5B,EAAIP,EAAIM,OAAS,EAAGC,GAAK,EAAGA,IAC9B4B,EAAc7B,OAKnBN,EAAIO,GAAGQ,YAAcoB,EAAcE,MAAMtB,YAJvCf,EAAIO,GAAGQ,YAAc,IARH,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAiB1B,SAASuB,EAASZ,GACEA,IADG,EACHA,EAAAA,EAAAA,GADG,IACE,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAZ1B,IAAAA,EAAY,EAAA,MACfmC,EAAgBnC,EAAIa,OAAO,SAAAC,GAAQA,OAAAA,EAAKC,cAE9CqB,EAAWD,GAEN,IAAA,IAAI5B,EAAI,EAAGA,EAAIP,EAAIM,OAAQC,IACzB4B,EAAc7B,OAKnBN,EAAIO,GAAGQ,YAAcoB,EAAcI,QAAQxB,YAJzCf,EAAIO,GAAGQ,YAAc,IARN,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAiBvB,SAASqB,EAAWD,GACdA,KAAAA,EAAc7B,OAAS,GAItB,IAAA,IAAIC,EAAI,EAAGA,EAAI4B,EAAc7B,OAAS,EAAGC,IACxC4B,GAAAA,EAAc5B,GAAGQ,cAAgBoB,EAAc5B,EAAI,GAAGQ,YAAa,CAC/DyB,IAAAA,EAA2C,GAA/BL,EAAc5B,GAAGQ,YAEnCoB,EAAcM,OAAOlC,EAAG,GACxB4B,EAAc5B,GAAGQ,YAAcyB,EAE/B/C,EAAMsB,aAAetB,EAAMsB,YAAcyB,GAK/C,SAAST,EAAiBW,EAAMC,GACvBD,OAAAA,EAAKE,MAAM,SAACC,EAAM1B,GAAU0B,OAAAA,IAASF,EAAKxB,KAGnD,SAASa,EAAWrB,GACAA,EAASmC,KAAK,SAAAD,GAAQA,MAAqB,SAArBA,EAAK9B,eAG3CpB,EAAO4B,UAAUwB,OAAO,UAI5B,SAASd,EAAYtB,GACCA,EAASmC,KAAK,SAAAD,GAAQ,OAACA,EAAK9B,eAE3BiC,EAAgBjD,IAAUiD,EAAgB7C,KAC7DR,EAAO4B,UAAUC,IAAI,UACrB5B,EAAQ2B,UAAUwB,OAAO,WAI7B,SAASC,EAAgBtB,GACLA,IADU,EACVA,EAAAA,EAAAA,GADU,IACL,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAChB,IADI1B,IAAAA,EAAY,EAAA,MACZO,EAAI,EAAGA,EAAIP,EAAIM,OAAS,EAAGC,IAC9BP,GAAAA,EAAIO,GAAGQ,cAAgBf,EAAIO,EAAI,GAAGQ,YAC7B,OAAA,EAJe,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IASrB,OAAA,EA5KTzB,EAAS2D,iBAAiB,QAAS,WACjCvD,EAAS6B,UAAUC,IAAI,UACvBlC,EAASiC,UAAUwB,OAAO,SAC1BzD,EAASiC,UAAUC,IAAI,WACvBlC,EAASyB,YAAc,UACvBL,EAAUF,GACVE,EAAUF,GACVa,EAAWb,GAEL0C,IAAAA,EAAa3D,SAASC,cAAc,YAE1C0D,EAAWC,MAAMC,QAAU,OAE3BF,EAAWD,iBAAiB,QAAS,WACnCxD,EAAMsB,YAAc,IACpBpB,EAAO4B,UAAUC,IAAI,UACrB5B,EAAQ2B,UAAUC,IAAI,UAEtBhB,EAAM6C,QAAQ,SAAAvC,GACZA,EAAKC,YAAc,KAGrBL,EAAUF,GACVE,EAAUF,GACVa,EAAWb,KAGbjB,SAAS+D,KAAKL,iBAAiB,UAAW,SAACM,GACjCA,OAAAA,EAAEC,MACH,IAAA,YACH/B,EAAK1B,EAAMuC,GACX,MACG,IAAA,aACHb,EAAK1B,EAAMmC,GACX,MACG,IAAA,UACHT,EAAKtB,EAASmC,GACd,MACG,IAAA,YACHb,EAAKtB,EAAS+B","file":"main.9fa7fffa.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst startBtn = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst startMsg = document.querySelector('.message-start');\nconst winMsg = document.querySelector('.message-win');\nconst loseMsg = document.querySelector('.message-lose');\n\nconst fieldRows = [...document.querySelectorAll('.field-row')];\nconst rows = [];\n\nfor (const row of fieldRows) {\n  rows.push([...row.children]);\n}\n\nconst columns = Array.from({ length: rows.length }, () => ([]));\n\nfor (const row of rows) {\n  for (let i = 0; i < row.length; i++) {\n    columns[i].push(row[i]);\n  }\n}\n\nconst cells = rows.flat();\n\nstartBtn.addEventListener('click', () => {\n  startMsg.classList.add('hidden');\n  startBtn.classList.remove('start');\n  startBtn.classList.add('restart');\n  startBtn.textContent = 'Restart';\n  addNumber(cells);\n  addNumber(cells);\n  styleCells(cells);\n\n  const restartBtn = document.querySelector('.restart');\n\n  restartBtn.style.outline = 'none';\n\n  restartBtn.addEventListener('click', () => {\n    score.textContent = '0';\n    winMsg.classList.add('hidden');\n    loseMsg.classList.add('hidden');\n\n    cells.forEach(cell => {\n      cell.textContent = '';\n    });\n\n    addNumber(cells);\n    addNumber(cells);\n    styleCells(cells);\n  });\n\n  document.body.addEventListener('keydown', (e) => {\n    switch (e.code) {\n      case 'ArrowLeft':\n        move(rows, leftOrUp);\n        break;\n      case 'ArrowRight':\n        move(rows, rightOrDown);\n        break;\n      case 'ArrowUp':\n        move(columns, leftOrUp);\n        break;\n      case 'ArrowDown':\n        move(columns, rightOrDown);\n        break;\n      default:\n        break;\n    }\n  });\n});\n\nfunction addNumber(allCells) {\n  const emptyCells = allCells.filter(cell => !cell.textContent);\n\n  if (!emptyCells.length) {\n    return;\n  }\n\n  const chance = Math.random();\n  const index = Math.floor(Math.random() * emptyCells.length);\n\n  if (chance < 0.9) {\n    emptyCells[index].textContent = '2';\n  } else {\n    emptyCells[index].textContent = '4';\n  }\n}\n\nfunction styleCells(allCells) {\n  for (const cell of allCells) {\n    cell.className = '';\n    cell.classList.add('field-cell');\n\n    if (cell.textContent) {\n      cell.classList.add(`field-cell--${cell.textContent}`);\n    }\n  }\n}\n\nfunction move(arr, direction) {\n  const cellsBefore = cells.map(el => el.textContent);\n\n  direction(arr);\n\n  const cellsAfter = cells.map(el => el.textContent);\n\n  if (!checkArraysEqual(cellsBefore, cellsAfter)) {\n    addNumber(cells);\n  }\n\n  showWinMsg(cells);\n  showLoseMsg(cells);\n  styleCells(cells);\n}\n\nfunction rightOrDown(arr) {\n  for (const row of arr) {\n    const cellsWithNumb = row.filter(cell => cell.textContent);\n\n    mergeCells(cellsWithNumb);\n\n    for (let i = row.length - 1; i >= 0; i--) {\n      if (!cellsWithNumb.length) {\n        row[i].textContent = '';\n        continue;\n      }\n\n      row[i].textContent = cellsWithNumb.pop().textContent;\n    }\n  }\n}\n\nfunction leftOrUp(arr) {\n  for (const row of arr) {\n    const cellsWithNumb = row.filter(cell => cell.textContent);\n\n    mergeCells(cellsWithNumb);\n\n    for (let i = 0; i < row.length; i++) {\n      if (!cellsWithNumb.length) {\n        row[i].textContent = '';\n        continue;\n      }\n\n      row[i].textContent = cellsWithNumb.shift().textContent;\n    }\n  }\n}\n\nfunction mergeCells(cellsWithNumb) {\n  if (cellsWithNumb.length < 2) {\n    return;\n  }\n\n  for (let i = 0; i < cellsWithNumb.length - 1; i++) {\n    if (cellsWithNumb[i].textContent === cellsWithNumb[i + 1].textContent) {\n      const newValue = +cellsWithNumb[i].textContent * 2;\n\n      cellsWithNumb.splice(i, 1);\n      cellsWithNumb[i].textContent = newValue;\n\n      score.textContent = +score.textContent + newValue;\n    }\n  }\n}\n\nfunction checkArraysEqual(arr1, arr2) {\n  return arr1.every((elem, index) => elem === arr2[index]);\n}\n\nfunction showWinMsg(allCells) {\n  const condition = allCells.some(elem => elem.textContent === '2048');\n\n  if (condition) {\n    winMsg.classList.remove('hidden');\n  }\n}\n\nfunction showLoseMsg(allCells) {\n  const isEmptyCell = allCells.some(elem => !elem.textContent);\n\n  if (!isEmptyCell && !isMergePossible(rows) && !isMergePossible(columns)) {\n    winMsg.classList.add('hidden');\n    loseMsg.classList.remove('hidden');\n  }\n}\n\nfunction isMergePossible(arr) {\n  for (const row of arr) {\n    for (let i = 0; i < row.length - 1; i++) {\n      if (row[i].textContent === row[i + 1].textContent) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}